generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TODO
  COMPLETED
  OVERDUE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categories Category[]
  tasks      Task[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  userId    String
  name      String
  color     String   @db.VarChar(7)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks Task[]

  @@unique([name, userId])
  @@map("categories")
}

model Task {
  id           String       @id @default(uuid())
  userId       String
  categoryId   String?
  title        String       @db.VarChar(255)
  description  String?      @db.Text
  status       TaskStatus
  priority     TaskPriority
  dueDate      DateTime?
  finishedDate DateTime?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("tasks")
}
